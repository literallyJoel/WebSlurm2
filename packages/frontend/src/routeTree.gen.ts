/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as Setup5Import } from './routes/setup/5'
import { Route as Setup4Import } from './routes/setup/4'
import { Route as Setup3Import } from './routes/setup/3'
import { Route as Setup2Import } from './routes/setup/2'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const SetupIndexLazyImport = createFileRoute('/setup/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SetupIndexLazyRoute = SetupIndexLazyImport.update({
  path: '/setup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/setup/index.lazy').then((d) => d.Route))

const Setup5Route = Setup5Import.update({
  path: '/setup/5',
  getParentRoute: () => rootRoute,
} as any)

const Setup4Route = Setup4Import.update({
  path: '/setup/4',
  getParentRoute: () => rootRoute,
} as any)

const Setup3Route = Setup3Import.update({
  path: '/setup/3',
  getParentRoute: () => rootRoute,
} as any)

const Setup2Route = Setup2Import.update({
  path: '/setup/2',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/setup/2': {
      id: '/setup/2'
      path: '/setup/2'
      fullPath: '/setup/2'
      preLoaderRoute: typeof Setup2Import
      parentRoute: typeof rootRoute
    }
    '/setup/3': {
      id: '/setup/3'
      path: '/setup/3'
      fullPath: '/setup/3'
      preLoaderRoute: typeof Setup3Import
      parentRoute: typeof rootRoute
    }
    '/setup/4': {
      id: '/setup/4'
      path: '/setup/4'
      fullPath: '/setup/4'
      preLoaderRoute: typeof Setup4Import
      parentRoute: typeof rootRoute
    }
    '/setup/5': {
      id: '/setup/5'
      path: '/setup/5'
      fullPath: '/setup/5'
      preLoaderRoute: typeof Setup5Import
      parentRoute: typeof rootRoute
    }
    '/setup/': {
      id: '/setup/'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  AuthLoginRoute,
  Setup2Route,
  Setup3Route,
  Setup4Route,
  Setup5Route,
  SetupIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/login",
        "/setup/2",
        "/setup/3",
        "/setup/4",
        "/setup/5",
        "/setup/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/setup/2": {
      "filePath": "setup/2.tsx"
    },
    "/setup/3": {
      "filePath": "setup/3.tsx"
    },
    "/setup/4": {
      "filePath": "setup/4.tsx"
    },
    "/setup/5": {
      "filePath": "setup/5.tsx"
    },
    "/setup/": {
      "filePath": "setup/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
